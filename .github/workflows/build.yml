name: Build Single Tag Versions
on: [push]
jobs: 
  Build-Single-Tag-Versions:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Create topic files in repository
        run: |
          grep t-general%20resources ${{ github.workspace }}/README.md > t-general-resources.md
          grep t-biases ${{ github.workspace }}/README.md > t-biases.md
          grep t-crowdsourcing%20issues ${{ github.workspace }}/README.md > t-crowdsourcing-issues.md
          grep t-data ${{ github.workspace }}/README.md > t-data.md
          grep t-dual%20use ${{ github.workspace }}/README.md > t-dual-use.md
          grep t-environmental%20impact ${{ github.workspace }}/README.md > t-environmental-impact.md
          grep t-evaluation ${{ github.workspace }}/README.md > t-evaluation.md
          grep t-language%20diversity ${{ github.workspace }}/README.md > t-language-diversity.md
          grep model%20issues ${{ github.workspace }}/README.md > t-model-issues.md
          grep uncategorized ${{ github.workspace }}/README.md > t-uncategorized.md

      - name: Create type files in repository
        run: |
          grep type-published ${{ github.workspace }}/README.md > x-published.md
          grep type-preprint ${{ github.workspace }}/README.md > x-preprint.md
          grep type-post ${{ github.workspace }}/README.md > x-post.md
          grep type-report ${{ github.workspace }}/README.md > x-report.md
          for n in published preprint post report do cat single-file-header.md x-$.md > type-$n.md; done
          rm -f x-*
          
      - name: setup git config
        run: |
          git config user.name "ACL Ethics Bibliography Actions Bot"
          git config user.email "<>"

      - name: commit
        run: |
          # Stage the file, commit and push
          git add .
          git commit -am "new local commit"
          git push origin
      
      - run: echo "üçè This job's status is ${{ job.status }}."
